"""creation of upscaling tables

Revision ID: 046ada00e750
Revises: 6105be2a2b21
Create Date: 2025-08-22 13:22:24.266047

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from sqlalchemy.dialects.postgresql import ENUM as PG_ENUM


# revision identifiers, used by Alembic.
revision: str = "046ada00e750"
down_revision: Union[str, Sequence[str], None] = "6105be2a2b21"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

process_type_enum = PG_ENUM(
    "OPENEO", "OGC_API_PROCESS", name="processtypeenum", create_type=False
)

processing_status_enum = PG_ENUM(
    "CREATED",
    "QUEUED",
    "RUNNING",
    "FINISHED",
    "CANCELED",
    "FAILED",
    "UNKNOWN",
    name="processingstatusenum",
    create_type=False,
)


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "upscaling_tasks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("label", process_type_enum, nullable=False),
        sa.Column("status", processing_status_enum, nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("service", sa.String(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_upscaling_tasks_created"), "upscaling_tasks", ["created"], unique=False
    )
    op.create_index(
        op.f("ix_upscaling_tasks_id"), "upscaling_tasks", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_upscaling_tasks_label"), "upscaling_tasks", ["label"], unique=False
    )
    op.create_index(
        op.f("ix_upscaling_tasks_service"), "upscaling_tasks", ["service"], unique=False
    )
    op.create_index(
        op.f("ix_upscaling_tasks_status"), "upscaling_tasks", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_upscaling_tasks_title"), "upscaling_tasks", ["title"], unique=False
    )
    op.create_index(
        op.f("ix_upscaling_tasks_updated"), "upscaling_tasks", ["updated"], unique=False
    )
    op.create_index(
        op.f("ix_upscaling_tasks_user_id"), "upscaling_tasks", ["user_id"], unique=False
    )
    op.add_column(
        "processing_jobs", sa.Column("upscaling_task_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None,
        "processing_jobs",
        "upscaling_tasks",
        ["upscaling_task_id"],
        ["id"],
        ondelete="SET NULL",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "processing_jobs", type_="foreignkey")
    op.drop_column("processing_jobs", "upscaling_task_id")
    op.drop_index(op.f("ix_upscaling_tasks_user_id"), table_name="upscaling_tasks")
    op.drop_index(op.f("ix_upscaling_tasks_updated"), table_name="upscaling_tasks")
    op.drop_index(op.f("ix_upscaling_tasks_title"), table_name="upscaling_tasks")
    op.drop_index(op.f("ix_upscaling_tasks_status"), table_name="upscaling_tasks")
    op.drop_index(op.f("ix_upscaling_tasks_service"), table_name="upscaling_tasks")
    op.drop_index(op.f("ix_upscaling_tasks_label"), table_name="upscaling_tasks")
    op.drop_index(op.f("ix_upscaling_tasks_id"), table_name="upscaling_tasks")
    op.drop_index(op.f("ix_upscaling_tasks_created"), table_name="upscaling_tasks")
    op.drop_table("upscaling_tasks")
    # ### end Alembic commands ###
